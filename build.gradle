
import org.antlr.v4.Tool

apply plugin: 'groovy'
apply plugin: 'application'
apply plugin: 'base'

version = '1.0'

mainClassName = 'com.xseagullx.groovy.gsoc.Main'

task wrapper(type: Wrapper) {
    gradleVersion = '1.9'
}

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'org.antlr:antlr4:4.2.1' // For antlr task.
    }
}

repositories {
    mavenCentral()
}

dependencies {
    compile 'org.antlr:antlr4-runtime:4.2.1'

    compile 'org.codehaus.groovy:groovy-all:2.2.2'

    compile 'com.thoughtworks.xstream:xstream:1.4.7' // For saveAsXML method in SourceUnit.

    testCompile 'org.spockframework:spock-core:0.7-groovy-2.0'
}

sourceSets.main.groovy.srcDirs = ['src', 'gen']
sourceSets.test.groovy.srcDirs = ['test']

// Setup antlr task
def antlrOutputDir = file('gen/com/xseagullx/groovy/gsoc')
def antlrInputFiles = [
    file('src/com/xseagullx/groovy/gsoc/GroovyLexer.g4'),
    file('src/com/xseagullx/groovy/gsoc/GroovyParser.g4')
]

task antlr << {
    antlrInputFiles.each {
        new Tool([it.absolutePath, '-o', antlrOutputDir.absolutePath, '-package', 'com.xseagullx.groovy.gsoc'] as String[]).processGrammarsOnCommandLine()
    }
}
antlr.outputs.dir antlrOutputDir
antlr.inputs.files antlrInputFiles

// Setup antlr dependencies
clean.dependsOn tasks.getByPath('cleanAntlr')
classes.dependsOn antlr

